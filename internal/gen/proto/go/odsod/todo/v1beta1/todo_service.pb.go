// Code generated by protoc-gen-go. DO NOT EDIT.
// source: odsod/todo/v1beta1/todo_service.proto

package todov1beta1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// List todos request.
type ListTodosRequest struct {
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token value returned from a previous List request, if any.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Flag for including deleted resources.
	ShowDeleted          bool     `protobuf:"varint,3,opt,name=show_deleted,json=showDeleted,proto3" json:"show_deleted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTodosRequest) Reset()         { *m = ListTodosRequest{} }
func (m *ListTodosRequest) String() string { return proto.CompactTextString(m) }
func (*ListTodosRequest) ProtoMessage()    {}
func (*ListTodosRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{0}
}

func (m *ListTodosRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTodosRequest.Unmarshal(m, b)
}
func (m *ListTodosRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTodosRequest.Marshal(b, m, deterministic)
}
func (m *ListTodosRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTodosRequest.Merge(m, src)
}
func (m *ListTodosRequest) XXX_Size() int {
	return xxx_messageInfo_ListTodosRequest.Size(m)
}
func (m *ListTodosRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTodosRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTodosRequest proto.InternalMessageInfo

func (m *ListTodosRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListTodosRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListTodosRequest) GetShowDeleted() bool {
	if m != nil {
		return m.ShowDeleted
	}
	return false
}

// List todos response.
type ListTodosResponse struct {
	// The returned todos.
	Todos []*Todo `protobuf:"bytes,1,rep,name=todos,proto3" json:"todos,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// The total number of todos in the list.
	TotalSize            int32    `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTodosResponse) Reset()         { *m = ListTodosResponse{} }
func (m *ListTodosResponse) String() string { return proto.CompactTextString(m) }
func (*ListTodosResponse) ProtoMessage()    {}
func (*ListTodosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{1}
}

func (m *ListTodosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTodosResponse.Unmarshal(m, b)
}
func (m *ListTodosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTodosResponse.Marshal(b, m, deterministic)
}
func (m *ListTodosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTodosResponse.Merge(m, src)
}
func (m *ListTodosResponse) XXX_Size() int {
	return xxx_messageInfo_ListTodosResponse.Size(m)
}
func (m *ListTodosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTodosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTodosResponse proto.InternalMessageInfo

func (m *ListTodosResponse) GetTodos() []*Todo {
	if m != nil {
		return m.Todos
	}
	return nil
}

func (m *ListTodosResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ListTodosResponse) GetTotalSize() int32 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

// Page token for the list todos endpoint.
type ListTodosPageToken struct {
	// Current offset in the total todos.
	Offset               int32    `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTodosPageToken) Reset()         { *m = ListTodosPageToken{} }
func (m *ListTodosPageToken) String() string { return proto.CompactTextString(m) }
func (*ListTodosPageToken) ProtoMessage()    {}
func (*ListTodosPageToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{2}
}

func (m *ListTodosPageToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTodosPageToken.Unmarshal(m, b)
}
func (m *ListTodosPageToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTodosPageToken.Marshal(b, m, deterministic)
}
func (m *ListTodosPageToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTodosPageToken.Merge(m, src)
}
func (m *ListTodosPageToken) XXX_Size() int {
	return xxx_messageInfo_ListTodosPageToken.Size(m)
}
func (m *ListTodosPageToken) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTodosPageToken.DiscardUnknown(m)
}

var xxx_messageInfo_ListTodosPageToken proto.InternalMessageInfo

func (m *ListTodosPageToken) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

// Get todo request.
type GetTodoRequest struct {
	// The resource name of the todo to get.
	// Example: "todos/1234"
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTodoRequest) Reset()         { *m = GetTodoRequest{} }
func (m *GetTodoRequest) String() string { return proto.CompactTextString(m) }
func (*GetTodoRequest) ProtoMessage()    {}
func (*GetTodoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{3}
}

func (m *GetTodoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTodoRequest.Unmarshal(m, b)
}
func (m *GetTodoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTodoRequest.Marshal(b, m, deterministic)
}
func (m *GetTodoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTodoRequest.Merge(m, src)
}
func (m *GetTodoRequest) XXX_Size() int {
	return xxx_messageInfo_GetTodoRequest.Size(m)
}
func (m *GetTodoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTodoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTodoRequest proto.InternalMessageInfo

func (m *GetTodoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Get todo response.
type GetTodoResponse struct {
	// The returned todo.
	Todo                 *Todo    `protobuf:"bytes,1,opt,name=todo,proto3" json:"todo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTodoResponse) Reset()         { *m = GetTodoResponse{} }
func (m *GetTodoResponse) String() string { return proto.CompactTextString(m) }
func (*GetTodoResponse) ProtoMessage()    {}
func (*GetTodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{4}
}

func (m *GetTodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTodoResponse.Unmarshal(m, b)
}
func (m *GetTodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTodoResponse.Marshal(b, m, deterministic)
}
func (m *GetTodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTodoResponse.Merge(m, src)
}
func (m *GetTodoResponse) XXX_Size() int {
	return xxx_messageInfo_GetTodoResponse.Size(m)
}
func (m *GetTodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTodoResponse proto.InternalMessageInfo

func (m *GetTodoResponse) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

// Batch get todos request.
type BatchGetTodosRequest struct {
	// The resource names of the todos to get.
	Names                []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchGetTodosRequest) Reset()         { *m = BatchGetTodosRequest{} }
func (m *BatchGetTodosRequest) String() string { return proto.CompactTextString(m) }
func (*BatchGetTodosRequest) ProtoMessage()    {}
func (*BatchGetTodosRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{5}
}

func (m *BatchGetTodosRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetTodosRequest.Unmarshal(m, b)
}
func (m *BatchGetTodosRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetTodosRequest.Marshal(b, m, deterministic)
}
func (m *BatchGetTodosRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetTodosRequest.Merge(m, src)
}
func (m *BatchGetTodosRequest) XXX_Size() int {
	return xxx_messageInfo_BatchGetTodosRequest.Size(m)
}
func (m *BatchGetTodosRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetTodosRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetTodosRequest proto.InternalMessageInfo

func (m *BatchGetTodosRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

// Batch get todos response.
type BatchGetTodosResponse struct {
	// The found todos.
	//
	// The order of results in this field is undefined and has no relation to the
	// order of the keys in the input.
	FoundTodos []*Todo `protobuf:"bytes,1,rep,name=found_todos,json=foundTodos,proto3" json:"found_todos,omitempty"`
	// The missing resource names.
	//
	// The order of results in this field is undefined and has no relation to the
	// order of the keys in the input.
	MissingNames         []string `protobuf:"bytes,2,rep,name=missing_names,json=missingNames,proto3" json:"missing_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BatchGetTodosResponse) Reset()         { *m = BatchGetTodosResponse{} }
func (m *BatchGetTodosResponse) String() string { return proto.CompactTextString(m) }
func (*BatchGetTodosResponse) ProtoMessage()    {}
func (*BatchGetTodosResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{6}
}

func (m *BatchGetTodosResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BatchGetTodosResponse.Unmarshal(m, b)
}
func (m *BatchGetTodosResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BatchGetTodosResponse.Marshal(b, m, deterministic)
}
func (m *BatchGetTodosResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BatchGetTodosResponse.Merge(m, src)
}
func (m *BatchGetTodosResponse) XXX_Size() int {
	return xxx_messageInfo_BatchGetTodosResponse.Size(m)
}
func (m *BatchGetTodosResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BatchGetTodosResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BatchGetTodosResponse proto.InternalMessageInfo

func (m *BatchGetTodosResponse) GetFoundTodos() []*Todo {
	if m != nil {
		return m.FoundTodos
	}
	return nil
}

func (m *BatchGetTodosResponse) GetMissingNames() []string {
	if m != nil {
		return m.MissingNames
	}
	return nil
}

// Create todo request.
type CreateTodoRequest struct {
	// The todo id to use for this todo.
	TodoId string `protobuf:"bytes,1,opt,name=todo_id,json=todoId,proto3" json:"todo_id,omitempty"`
	// The todo resource to create.
	Todo                 *Todo    `protobuf:"bytes,2,opt,name=todo,proto3" json:"todo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTodoRequest) Reset()         { *m = CreateTodoRequest{} }
func (m *CreateTodoRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTodoRequest) ProtoMessage()    {}
func (*CreateTodoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{7}
}

func (m *CreateTodoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTodoRequest.Unmarshal(m, b)
}
func (m *CreateTodoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTodoRequest.Marshal(b, m, deterministic)
}
func (m *CreateTodoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTodoRequest.Merge(m, src)
}
func (m *CreateTodoRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTodoRequest.Size(m)
}
func (m *CreateTodoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTodoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTodoRequest proto.InternalMessageInfo

func (m *CreateTodoRequest) GetTodoId() string {
	if m != nil {
		return m.TodoId
	}
	return ""
}

func (m *CreateTodoRequest) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

// Create todo response.
type CreateTodoResponse struct {
	// The created todo.
	Todo                 *Todo    `protobuf:"bytes,1,opt,name=todo,proto3" json:"todo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTodoResponse) Reset()         { *m = CreateTodoResponse{} }
func (m *CreateTodoResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTodoResponse) ProtoMessage()    {}
func (*CreateTodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{8}
}

func (m *CreateTodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTodoResponse.Unmarshal(m, b)
}
func (m *CreateTodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTodoResponse.Marshal(b, m, deterministic)
}
func (m *CreateTodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTodoResponse.Merge(m, src)
}
func (m *CreateTodoResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTodoResponse.Size(m)
}
func (m *CreateTodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTodoResponse proto.InternalMessageInfo

func (m *CreateTodoResponse) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

// Update todo request.
type UpdateTodoRequest struct {
	// The todo resource which replaces the current todo resource.
	Todo *Todo `protobuf:"bytes,1,opt,name=todo,proto3" json:"todo,omitempty"`
	// The update mask applies to the resource.
	//
	// For the `FieldMask` definition, see:
	// https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateTodoRequest) Reset()         { *m = UpdateTodoRequest{} }
func (m *UpdateTodoRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTodoRequest) ProtoMessage()    {}
func (*UpdateTodoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{9}
}

func (m *UpdateTodoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTodoRequest.Unmarshal(m, b)
}
func (m *UpdateTodoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTodoRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTodoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTodoRequest.Merge(m, src)
}
func (m *UpdateTodoRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTodoRequest.Size(m)
}
func (m *UpdateTodoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTodoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTodoRequest proto.InternalMessageInfo

func (m *UpdateTodoRequest) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

func (m *UpdateTodoRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// Update todo response.
type UpdateTodoResponse struct {
	// The updated todo.
	Todo                 *Todo    `protobuf:"bytes,1,opt,name=todo,proto3" json:"todo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTodoResponse) Reset()         { *m = UpdateTodoResponse{} }
func (m *UpdateTodoResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTodoResponse) ProtoMessage()    {}
func (*UpdateTodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{10}
}

func (m *UpdateTodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTodoResponse.Unmarshal(m, b)
}
func (m *UpdateTodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTodoResponse.Marshal(b, m, deterministic)
}
func (m *UpdateTodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTodoResponse.Merge(m, src)
}
func (m *UpdateTodoResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateTodoResponse.Size(m)
}
func (m *UpdateTodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTodoResponse proto.InternalMessageInfo

func (m *UpdateTodoResponse) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

// Delete todo request.
type DeleteTodoRequest struct {
	// The resource name of the todo to mark for deletion.
	// For example: "todos/1234"
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTodoRequest) Reset()         { *m = DeleteTodoRequest{} }
func (m *DeleteTodoRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTodoRequest) ProtoMessage()    {}
func (*DeleteTodoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{11}
}

func (m *DeleteTodoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTodoRequest.Unmarshal(m, b)
}
func (m *DeleteTodoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTodoRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTodoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTodoRequest.Merge(m, src)
}
func (m *DeleteTodoRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTodoRequest.Size(m)
}
func (m *DeleteTodoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTodoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTodoRequest proto.InternalMessageInfo

func (m *DeleteTodoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Delete todo response.
type DeleteTodoResponse struct {
	// The todo marked for deletion.
	Todo                 *Todo    `protobuf:"bytes,1,opt,name=todo,proto3" json:"todo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTodoResponse) Reset()         { *m = DeleteTodoResponse{} }
func (m *DeleteTodoResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTodoResponse) ProtoMessage()    {}
func (*DeleteTodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{12}
}

func (m *DeleteTodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTodoResponse.Unmarshal(m, b)
}
func (m *DeleteTodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTodoResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTodoResponse.Merge(m, src)
}
func (m *DeleteTodoResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTodoResponse.Size(m)
}
func (m *DeleteTodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTodoResponse proto.InternalMessageInfo

func (m *DeleteTodoResponse) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

// Undelete todo request.
type UndeleteTodoRequest struct {
	// The resource name of the todo to undelete.
	// For example: "todos/1234"
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UndeleteTodoRequest) Reset()         { *m = UndeleteTodoRequest{} }
func (m *UndeleteTodoRequest) String() string { return proto.CompactTextString(m) }
func (*UndeleteTodoRequest) ProtoMessage()    {}
func (*UndeleteTodoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{13}
}

func (m *UndeleteTodoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UndeleteTodoRequest.Unmarshal(m, b)
}
func (m *UndeleteTodoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UndeleteTodoRequest.Marshal(b, m, deterministic)
}
func (m *UndeleteTodoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UndeleteTodoRequest.Merge(m, src)
}
func (m *UndeleteTodoRequest) XXX_Size() int {
	return xxx_messageInfo_UndeleteTodoRequest.Size(m)
}
func (m *UndeleteTodoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UndeleteTodoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UndeleteTodoRequest proto.InternalMessageInfo

func (m *UndeleteTodoRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Undelete todo response.
type UndeleteTodoResponse struct {
	// The undeleted todo.
	Todo                 *Todo    `protobuf:"bytes,1,opt,name=todo,proto3" json:"todo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UndeleteTodoResponse) Reset()         { *m = UndeleteTodoResponse{} }
func (m *UndeleteTodoResponse) String() string { return proto.CompactTextString(m) }
func (*UndeleteTodoResponse) ProtoMessage()    {}
func (*UndeleteTodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2fff1e5a549d09c3, []int{14}
}

func (m *UndeleteTodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UndeleteTodoResponse.Unmarshal(m, b)
}
func (m *UndeleteTodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UndeleteTodoResponse.Marshal(b, m, deterministic)
}
func (m *UndeleteTodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UndeleteTodoResponse.Merge(m, src)
}
func (m *UndeleteTodoResponse) XXX_Size() int {
	return xxx_messageInfo_UndeleteTodoResponse.Size(m)
}
func (m *UndeleteTodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UndeleteTodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UndeleteTodoResponse proto.InternalMessageInfo

func (m *UndeleteTodoResponse) GetTodo() *Todo {
	if m != nil {
		return m.Todo
	}
	return nil
}

func init() {
	proto.RegisterType((*ListTodosRequest)(nil), "odsod.todo.v1beta1.ListTodosRequest")
	proto.RegisterType((*ListTodosResponse)(nil), "odsod.todo.v1beta1.ListTodosResponse")
	proto.RegisterType((*ListTodosPageToken)(nil), "odsod.todo.v1beta1.ListTodosPageToken")
	proto.RegisterType((*GetTodoRequest)(nil), "odsod.todo.v1beta1.GetTodoRequest")
	proto.RegisterType((*GetTodoResponse)(nil), "odsod.todo.v1beta1.GetTodoResponse")
	proto.RegisterType((*BatchGetTodosRequest)(nil), "odsod.todo.v1beta1.BatchGetTodosRequest")
	proto.RegisterType((*BatchGetTodosResponse)(nil), "odsod.todo.v1beta1.BatchGetTodosResponse")
	proto.RegisterType((*CreateTodoRequest)(nil), "odsod.todo.v1beta1.CreateTodoRequest")
	proto.RegisterType((*CreateTodoResponse)(nil), "odsod.todo.v1beta1.CreateTodoResponse")
	proto.RegisterType((*UpdateTodoRequest)(nil), "odsod.todo.v1beta1.UpdateTodoRequest")
	proto.RegisterType((*UpdateTodoResponse)(nil), "odsod.todo.v1beta1.UpdateTodoResponse")
	proto.RegisterType((*DeleteTodoRequest)(nil), "odsod.todo.v1beta1.DeleteTodoRequest")
	proto.RegisterType((*DeleteTodoResponse)(nil), "odsod.todo.v1beta1.DeleteTodoResponse")
	proto.RegisterType((*UndeleteTodoRequest)(nil), "odsod.todo.v1beta1.UndeleteTodoRequest")
	proto.RegisterType((*UndeleteTodoResponse)(nil), "odsod.todo.v1beta1.UndeleteTodoResponse")
}

func init() {
	proto.RegisterFile("odsod/todo/v1beta1/todo_service.proto", fileDescriptor_2fff1e5a549d09c3)
}

var fileDescriptor_2fff1e5a549d09c3 = []byte{
	// 676 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdd, 0x4e, 0x13, 0x41,
	0x14, 0xce, 0x16, 0x0a, 0xec, 0x59, 0x10, 0x3a, 0x22, 0x36, 0x6b, 0x48, 0xea, 0xf2, 0xb7, 0x24,
	0x64, 0x1b, 0xf0, 0xca, 0x78, 0x61, 0x52, 0x89, 0xc6, 0x44, 0x85, 0x2c, 0x60, 0x0c, 0x90, 0x6c,
	0x16, 0x66, 0x5a, 0x56, 0xda, 0x9d, 0xc2, 0x4c, 0xc1, 0x70, 0xe1, 0x03, 0xf8, 0x0a, 0xde, 0x79,
	0xe9, 0xa3, 0xf8, 0x54, 0x66, 0x7e, 0xd8, 0x2e, 0xec, 0x48, 0x6b, 0xef, 0x76, 0xce, 0x7c, 0xe7,
	0xfb, 0xce, 0x39, 0x7b, 0xbe, 0x81, 0x15, 0x8a, 0x19, 0xc5, 0x75, 0x4e, 0x31, 0xad, 0x5f, 0x6d,
	0x9e, 0x10, 0x1e, 0x6f, 0xca, 0x43, 0xc4, 0xc8, 0xe5, 0x55, 0x72, 0x4a, 0x82, 0xee, 0x25, 0xe5,
	0x14, 0x21, 0x09, 0x0b, 0xc4, 0x4d, 0xa0, 0x61, 0x6e, 0xad, 0x45, 0x69, 0xab, 0x4d, 0xea, 0x12,
	0x71, 0xd2, 0x6b, 0xd6, 0x9b, 0x09, 0x69, 0xe3, 0xa8, 0x13, 0xb3, 0x73, 0x95, 0xe5, 0x2e, 0xfe,
	0x83, 0x5c, 0x5d, 0x7b, 0x17, 0x30, 0xf7, 0x21, 0x61, 0x7c, 0x9f, 0x62, 0xca, 0x42, 0x72, 0xd1,
	0x23, 0x8c, 0xa3, 0x67, 0x60, 0x77, 0xe3, 0x16, 0x89, 0x58, 0x72, 0x43, 0xaa, 0x56, 0xcd, 0xf2,
	0xcb, 0xe1, 0x94, 0x08, 0xec, 0x25, 0x37, 0x04, 0x2d, 0x02, 0xc8, 0x4b, 0x4e, 0xcf, 0x49, 0x5a,
	0x2d, 0xd5, 0x2c, 0xdf, 0x0e, 0x25, 0x7c, 0x5f, 0x04, 0xd0, 0x73, 0x98, 0x66, 0x67, 0xf4, 0x3a,
	0xc2, 0xa4, 0x4d, 0x38, 0xc1, 0xd5, 0xb1, 0x9a, 0xe5, 0x4f, 0x85, 0x8e, 0x88, 0x6d, 0xab, 0x90,
	0xf7, 0xc3, 0x82, 0x4a, 0x4e, 0x93, 0x75, 0x69, 0xca, 0x08, 0x0a, 0xa0, 0x2c, 0xca, 0x62, 0x55,
	0xab, 0x36, 0xe6, 0x3b, 0x5b, 0xd5, 0xa0, 0xd8, 0x6d, 0x20, 0x32, 0x42, 0x05, 0x43, 0xab, 0x30,
	0x9b, 0x92, 0x6f, 0x3c, 0x2a, 0x14, 0x33, 0x23, 0xc2, 0xbb, 0x59, 0x41, 0x8b, 0x00, 0x9c, 0xf2,
	0xb8, 0xad, 0xba, 0x19, 0x93, 0xdd, 0xd8, 0x32, 0x22, 0xda, 0xf1, 0x36, 0x00, 0x65, 0xb5, 0xf4,
	0x93, 0x16, 0x60, 0x82, 0x36, 0x9b, 0x8c, 0x70, 0xdd, 0xbe, 0x3e, 0x79, 0xcb, 0xf0, 0xe8, 0x1d,
	0x91, 0xe0, 0xdb, 0x59, 0x21, 0x18, 0x4f, 0xe3, 0x8e, 0x1a, 0x93, 0x1d, 0xca, 0x6f, 0xef, 0x35,
	0xcc, 0x66, 0x28, 0xdd, 0xdd, 0x06, 0x8c, 0x8b, 0xb2, 0x25, 0xec, 0xa1, 0xe6, 0x24, 0xca, 0xdb,
	0x80, 0xf9, 0x46, 0xcc, 0x4f, 0xcf, 0x34, 0x4b, 0xf6, 0x63, 0xe6, 0xa1, 0x2c, 0x04, 0xd4, 0x8c,
	0xec, 0x50, 0x1d, 0xbc, 0x6b, 0x78, 0x72, 0x0f, 0xad, 0x45, 0x5f, 0x82, 0xd3, 0xa4, 0xbd, 0x14,
	0x47, 0xc3, 0x0d, 0x16, 0x24, 0x58, 0x52, 0xa0, 0x25, 0x98, 0xe9, 0x24, 0x8c, 0x25, 0x69, 0x2b,
	0x52, 0x8a, 0x25, 0xa9, 0x38, 0xad, 0x83, 0x9f, 0xa4, 0xf0, 0x21, 0x54, 0xde, 0x5c, 0x92, 0x98,
	0x93, 0xfc, 0x40, 0x9e, 0xc2, 0xa4, 0xdc, 0xdd, 0x04, 0xeb, 0x99, 0x4c, 0x88, 0xe3, 0x7b, 0x9c,
	0x8d, 0xa0, 0x34, 0xd4, 0x08, 0x1a, 0x80, 0xf2, 0xdc, 0x23, 0x8d, 0xf1, 0x3b, 0x54, 0x0e, 0xba,
	0xf8, 0x5e, 0x7d, 0xff, 0x45, 0x81, 0x5e, 0x81, 0xd3, 0x93, 0x14, 0xd2, 0x52, 0xba, 0x76, 0x37,
	0x50, 0xae, 0x0b, 0x6e, 0x5d, 0x17, 0xbc, 0x15, 0xae, 0xfb, 0x18, 0xb3, 0xf3, 0x10, 0x14, 0x5c,
	0x7c, 0x8b, 0x1e, 0xf2, 0xfa, 0x23, 0xf5, 0xb0, 0x06, 0x15, 0xe5, 0x9b, 0x41, 0x4b, 0xd7, 0x00,
	0x94, 0x07, 0x8e, 0x24, 0xb6, 0x0e, 0x8f, 0x0f, 0x52, 0x3c, 0x94, 0xdc, 0x36, 0xcc, 0xdf, 0x85,
	0x8e, 0x22, 0xb8, 0xf5, 0xb3, 0x0c, 0x8e, 0x38, 0xee, 0xa9, 0x87, 0x0e, 0x7d, 0x01, 0x3b, 0x73,
	0x23, 0x5a, 0x36, 0x25, 0xdf, 0x7f, 0xac, 0xdc, 0x95, 0x01, 0x28, 0x5d, 0x57, 0x08, 0x93, 0xda,
	0x1f, 0xc8, 0x33, 0x65, 0xdc, 0xb5, 0xb5, 0xbb, 0xf4, 0x20, 0x46, 0x73, 0x62, 0x98, 0xb9, 0x63,
	0x3c, 0xe4, 0x9b, 0xb2, 0x4c, 0x4e, 0x76, 0xd7, 0x87, 0x40, 0x6a, 0x95, 0x23, 0x80, 0xbe, 0x13,
	0x90, 0xb1, 0xdd, 0x82, 0x0b, 0xdd, 0xd5, 0x41, 0xb0, 0x3e, 0x79, 0x7f, 0x45, 0xcd, 0xe4, 0x05,
	0x0b, 0x99, 0xc9, 0x0d, 0x9b, 0x7e, 0x04, 0xd0, 0x5f, 0x49, 0x33, 0x79, 0x61, 0xb7, 0xcd, 0xe4,
	0x86, 0xcd, 0x8e, 0x61, 0x3a, 0xbf, 0x80, 0x68, 0xcd, 0x58, 0x54, 0x71, 0x9b, 0x5d, 0x7f, 0x30,
	0x50, 0x49, 0x34, 0xbe, 0xc2, 0xc2, 0x29, 0xed, 0x18, 0xe0, 0x8d, 0xb9, 0xdc, 0xd2, 0xee, 0x8a,
	0x47, 0x60, 0xd7, 0x3a, 0x74, 0x04, 0x42, 0x03, 0x7e, 0x95, 0xc6, 0xf7, 0x77, 0xb6, 0x77, 0x7e,
	0x97, 0xd0, 0x8e, 0x4c, 0x16, 0xf0, 0xe0, 0xb3, 0xba, 0xfb, 0xa3, 0x83, 0xc7, 0x22, 0x78, 0xac,
	0x83, 0x27, 0x13, 0xf2, 0x2d, 0x79, 0xf1, 0x37, 0x00, 0x00, 0xff, 0xff, 0x8b, 0x7a, 0xf2, 0x72,
	0x0c, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TodoServiceClient is the client API for TodoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TodoServiceClient interface {
	// List todos.
	ListTodos(ctx context.Context, in *ListTodosRequest, opts ...grpc.CallOption) (*ListTodosResponse, error)
	// Get a todo.
	GetTodo(ctx context.Context, in *GetTodoRequest, opts ...grpc.CallOption) (*GetTodoResponse, error)
	// Get a batch of todos.
	BatchGetTodos(ctx context.Context, in *BatchGetTodosRequest, opts ...grpc.CallOption) (*BatchGetTodosResponse, error)
	// Create a todo.
	CreateTodo(ctx context.Context, in *CreateTodoRequest, opts ...grpc.CallOption) (*CreateTodoResponse, error)
	// Update a todo.
	UpdateTodo(ctx context.Context, in *UpdateTodoRequest, opts ...grpc.CallOption) (*UpdateTodoResponse, error)
	// Delete a todo.
	DeleteTodo(ctx context.Context, in *DeleteTodoRequest, opts ...grpc.CallOption) (*DeleteTodoResponse, error)
	// Unedelete a todo.
	UndeleteTodo(ctx context.Context, in *UndeleteTodoRequest, opts ...grpc.CallOption) (*UndeleteTodoResponse, error)
}

type todoServiceClient struct {
	cc *grpc.ClientConn
}

func NewTodoServiceClient(cc *grpc.ClientConn) TodoServiceClient {
	return &todoServiceClient{cc}
}

func (c *todoServiceClient) ListTodos(ctx context.Context, in *ListTodosRequest, opts ...grpc.CallOption) (*ListTodosResponse, error) {
	out := new(ListTodosResponse)
	err := c.cc.Invoke(ctx, "/odsod.todo.v1beta1.TodoService/ListTodos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) GetTodo(ctx context.Context, in *GetTodoRequest, opts ...grpc.CallOption) (*GetTodoResponse, error) {
	out := new(GetTodoResponse)
	err := c.cc.Invoke(ctx, "/odsod.todo.v1beta1.TodoService/GetTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) BatchGetTodos(ctx context.Context, in *BatchGetTodosRequest, opts ...grpc.CallOption) (*BatchGetTodosResponse, error) {
	out := new(BatchGetTodosResponse)
	err := c.cc.Invoke(ctx, "/odsod.todo.v1beta1.TodoService/BatchGetTodos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) CreateTodo(ctx context.Context, in *CreateTodoRequest, opts ...grpc.CallOption) (*CreateTodoResponse, error) {
	out := new(CreateTodoResponse)
	err := c.cc.Invoke(ctx, "/odsod.todo.v1beta1.TodoService/CreateTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) UpdateTodo(ctx context.Context, in *UpdateTodoRequest, opts ...grpc.CallOption) (*UpdateTodoResponse, error) {
	out := new(UpdateTodoResponse)
	err := c.cc.Invoke(ctx, "/odsod.todo.v1beta1.TodoService/UpdateTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) DeleteTodo(ctx context.Context, in *DeleteTodoRequest, opts ...grpc.CallOption) (*DeleteTodoResponse, error) {
	out := new(DeleteTodoResponse)
	err := c.cc.Invoke(ctx, "/odsod.todo.v1beta1.TodoService/DeleteTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) UndeleteTodo(ctx context.Context, in *UndeleteTodoRequest, opts ...grpc.CallOption) (*UndeleteTodoResponse, error) {
	out := new(UndeleteTodoResponse)
	err := c.cc.Invoke(ctx, "/odsod.todo.v1beta1.TodoService/UndeleteTodo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TodoServiceServer is the server API for TodoService service.
type TodoServiceServer interface {
	// List todos.
	ListTodos(context.Context, *ListTodosRequest) (*ListTodosResponse, error)
	// Get a todo.
	GetTodo(context.Context, *GetTodoRequest) (*GetTodoResponse, error)
	// Get a batch of todos.
	BatchGetTodos(context.Context, *BatchGetTodosRequest) (*BatchGetTodosResponse, error)
	// Create a todo.
	CreateTodo(context.Context, *CreateTodoRequest) (*CreateTodoResponse, error)
	// Update a todo.
	UpdateTodo(context.Context, *UpdateTodoRequest) (*UpdateTodoResponse, error)
	// Delete a todo.
	DeleteTodo(context.Context, *DeleteTodoRequest) (*DeleteTodoResponse, error)
	// Unedelete a todo.
	UndeleteTodo(context.Context, *UndeleteTodoRequest) (*UndeleteTodoResponse, error)
}

// UnimplementedTodoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTodoServiceServer struct {
}

func (*UnimplementedTodoServiceServer) ListTodos(ctx context.Context, req *ListTodosRequest) (*ListTodosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTodos not implemented")
}
func (*UnimplementedTodoServiceServer) GetTodo(ctx context.Context, req *GetTodoRequest) (*GetTodoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTodo not implemented")
}
func (*UnimplementedTodoServiceServer) BatchGetTodos(ctx context.Context, req *BatchGetTodosRequest) (*BatchGetTodosResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchGetTodos not implemented")
}
func (*UnimplementedTodoServiceServer) CreateTodo(ctx context.Context, req *CreateTodoRequest) (*CreateTodoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTodo not implemented")
}
func (*UnimplementedTodoServiceServer) UpdateTodo(ctx context.Context, req *UpdateTodoRequest) (*UpdateTodoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTodo not implemented")
}
func (*UnimplementedTodoServiceServer) DeleteTodo(ctx context.Context, req *DeleteTodoRequest) (*DeleteTodoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTodo not implemented")
}
func (*UnimplementedTodoServiceServer) UndeleteTodo(ctx context.Context, req *UndeleteTodoRequest) (*UndeleteTodoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UndeleteTodo not implemented")
}

func RegisterTodoServiceServer(s *grpc.Server, srv TodoServiceServer) {
	s.RegisterService(&_TodoService_serviceDesc, srv)
}

func _TodoService_ListTodos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTodosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).ListTodos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odsod.todo.v1beta1.TodoService/ListTodos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).ListTodos(ctx, req.(*ListTodosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_GetTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).GetTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odsod.todo.v1beta1.TodoService/GetTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).GetTodo(ctx, req.(*GetTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_BatchGetTodos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BatchGetTodosRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).BatchGetTodos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odsod.todo.v1beta1.TodoService/BatchGetTodos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).BatchGetTodos(ctx, req.(*BatchGetTodosRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_CreateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).CreateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odsod.todo.v1beta1.TodoService/CreateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).CreateTodo(ctx, req.(*CreateTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_UpdateTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).UpdateTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odsod.todo.v1beta1.TodoService/UpdateTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).UpdateTodo(ctx, req.(*UpdateTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_DeleteTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).DeleteTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odsod.todo.v1beta1.TodoService/DeleteTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).DeleteTodo(ctx, req.(*DeleteTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_UndeleteTodo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UndeleteTodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).UndeleteTodo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/odsod.todo.v1beta1.TodoService/UndeleteTodo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).UndeleteTodo(ctx, req.(*UndeleteTodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TodoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "odsod.todo.v1beta1.TodoService",
	HandlerType: (*TodoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListTodos",
			Handler:    _TodoService_ListTodos_Handler,
		},
		{
			MethodName: "GetTodo",
			Handler:    _TodoService_GetTodo_Handler,
		},
		{
			MethodName: "BatchGetTodos",
			Handler:    _TodoService_BatchGetTodos_Handler,
		},
		{
			MethodName: "CreateTodo",
			Handler:    _TodoService_CreateTodo_Handler,
		},
		{
			MethodName: "UpdateTodo",
			Handler:    _TodoService_UpdateTodo_Handler,
		},
		{
			MethodName: "DeleteTodo",
			Handler:    _TodoService_DeleteTodo_Handler,
		},
		{
			MethodName: "UndeleteTodo",
			Handler:    _TodoService_UndeleteTodo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "odsod/todo/v1beta1/todo_service.proto",
}
